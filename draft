一、今天要聊的话题是MVVM实战，再聊之前，我喜欢从问题开始，毕竟一切都是为了解决问题。

1、重量级的ViewController：随着业务迭代，ViewController里充斥着各种各样的逻辑，一个小需求，却需要翻阅大量的代码，最后还可能造成许多“莫名”的Bug。

2、梦想中的单元测试：一个简单的单元测试，却需要创建一个重量级ViewController，ViewController又依赖着xxxx，最后就是：算了不做了。

3、乱入的状态位：当看到许多状态位，又没有注释，只能根据代码去YY业务逻辑的时候...

4、拆分的痛苦：当业务大到一定程度，会去做一些模块化的拆分，如果上面的问题存在，那么拆分一定是痛苦的。

今天聊的这个话题，并不是去介绍MVVM框架是怎么样的，标准代码怎么写，我觉得除了它的思想是通用的，其他的都因项目而异。接下来用一个Demo的进化过程来说明对MVVM的简单应用，有什么不对的地方欢迎拍砖。


